server.port = 8080
spring.application.name = AuthService

#Eureka configuration
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://azghar921978.c3q4yy86qxei.us-east-1.rds.amazonaws.com/authroizedb?createDatabaseIfNotExist=true
spring.datasource.username=admin
spring.datasource.password=Admin123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql= true
spring.cloud.compatibility-verifier.enabled=false

jwt.secret = secret

app.jwttoken.message =  Login Successful
app.controller.exception.message1= Id and Password Empty
app.controller.exception.message2= Id and Password not found
app.controller.exception.message3= Id and Password invalid
app.service.message1= User Already Exists
app.service.message2= Invalid Id and Password


#Kafka Configuration
spring.kafka.producer.bootstrap-servers=3.216.146.132:9092
spring.kafka.consumer.group-id=authgroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer